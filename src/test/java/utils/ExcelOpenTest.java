package utils;

import org.junit.Assert;
import org.junit.jupiter.api.AfterAll;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.assertThrows;
import static utils.ExcelOpen.fillArrayWithValues;

class ExcelOpenTest {
    private static String language;
    private static String[] excelArrayEqualsExpected;
    private static String[] excelArrayNotEqualsExpected;

    @Test
    void compareValueToEqualsThemOnRussian() {
        language = "Rus";
        excelArrayEqualsExpected = new String[]{"ноль", "один", "два", "три", "четыре", "пять", "шесть", "семь",
                "восемь", "девять", "десять", "одиннадцать", "двенадцать", "тринадцать", "четырнадцать", "пятнадцать",
                "шестнадцать", "семнадцать", "восемнадцать", "девятнадцать", "двадцать", "тридцать", "сорок",
                "пятьдесят", "шестьдесят", "семьдесят", "восемьдесят", "девяноста", "сто", "двести", "триста",
                "четыреста", "пятьсот", "шестьсот", "семьсот", "восемьсот", "девятьсот", "тысяч", "миллион", "миллиард",
                "триллион", "квадриллион", "квинтиллион", "секстиллион", "септиллион", "октиллион", "нониллион", "дециллион",
                "андециллион", "дуодециллион", "тридециллион", "квадридециллион", "квинтидециллион", "секстидециллион",
                "септидециллион", "октидециллион", "нонидециллион", "децидециллион"};
        Assert.assertArrayEquals(excelArrayEqualsExpected, fillArrayWithValues(language));
    }

    @Test
    void compareValueToNotEqualsThemOnRussian() {
        language = "Rus";
        excelArrayNotEqualsExpected = new String[]{"ноль", "один", "два", "три", "четыре"};
        Assert.assertNotEquals(excelArrayNotEqualsExpected, fillArrayWithValues(language));
    }
/*
    @Test
    void compareValueToEqualsThemOnEnglish() {
        language = "Eng";
        excelArrayEqualsExpected = new String[]{"ноль", "один", "два", "три", "четыре", "пять", "шесть", "семь",
                "восемь", "девять", "десять", "одиннадцать", "двенадцать", "тринадцать", "четырнадцать", "пятнадцать",
                "шестнадцать", "семнадцать", "восемнадцать", "девятнадцать", "двадцать", "тридцать", "сорок",
                "пятьдесят", "шестьдесят", "семьдесят", "восемьдесят", "девяноста", "сто", "двести", "триста",
                "четыреста", "пятьсот", "шестьсот", "семьсот", "восемьсот", "девятьсот", "тысяч", "миллион", "миллиард",
                "триллион", "квадриллион", "квинтиллион", "секстиллион", "септиллион", "октиллион", "нониллион", "дециллион",
                "андециллион", "дуодециллион", "тридециллион", "квадридециллион", "квинтидециллион", "секстидециллион",
                "септидециллион", "октидециллион", "нонидециллион", "децидециллион"};
        Assert.assertArrayEquals(excelArrayEqualsExpected, fillArrayWithValues(language));
    }
*/
    @Test
    void compareValueToNotEqualsThemOnEnglish() {
        language = "Eng";
        excelArrayNotEqualsExpected = new String[]{"zero", "one", "two"};
        Assert.assertNotEquals(excelArrayNotEqualsExpected, fillArrayWithValues(language));
    }
}